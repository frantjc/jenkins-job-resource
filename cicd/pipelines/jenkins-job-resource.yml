resource_types:
  - name: discord-resource
    type: registry-image
    source:
      repository: trivigy/discord-resource

  - name: jenkins-job-resource
    type: registry-image
    source:
      repository: logsquaredn/jenkins-job-resource
      tag: latest



resources:
  - name: jenkins-job-resource
    type: git
    icon: github
    check_every: 30m
    source:
      uri: https://github.com/logsquaredn/jenkins-job-resource/
      branch: master

  - name: jenkins-job-resource-image-alpine
    type: docker-image
    icon: docker
    check_every: 1h
    source: 
      username: ((docker.username))
      password: ((docker.password))
      repository: ((docker.username))/jenkins-job-resource
      tag: alpine

  - name: jenkins-job-resource-image-ubuntu
    type: docker-image
    icon: docker
    check_every: 1h
    source:
      username: ((docker.username))
      password: ((docker.password))
      repository: ((docker.username))/jenkins-job-resource

  - name: jenkins-job-resource-test
    type: jenkins-job-resource
    icon: test-tube
    check_every: 1h
    source:
      url: ((jenkins.url))
      job: ((jenkins.job.name))
      username: ((jenkins.username))
      login: ((jenkins.api_token))
      token: ((jenkins.job.token))

  - name: version
    type: semver
    icon: tag
    check_every: 9999h
    source:
      initial_version: 0.0.1
      driver: s3
      bucket: ((aws.s3.bucket))
      key: ((aws.s3.keys.version))
      access_key_id: ((aws.s3.access_key.id))
      secret_access_key: ((aws.s3.access_key.secret))
      region_name: ((aws.s3.region))

  - name: vars
    type: s3
    icon: cog
    check_every: 30m
    source:
      bucket: ((aws.s3.bucket))
      regexp: ((aws.s3.keys.vars))
      access_key_id: ((aws.s3.access_key.id))
      secret_access_key: ((aws.s3.access_key.secret))
      region_name: ((aws.s3.region))

  - name: notify
    type: discord-resource
    icon: discord
    check_every: 9999h
    source:
      token: ((discord.token))



anchors:
  - &default_job_config
    build_log_retention:
      builds: 12
      minimum_succeeded_builds: 3
    serial: true
    on_failure:
      put: notify
      params:
        channel: ((discord.channel))
        title: jenkins-job-resource
        message: job failed

  - &build_args
    JENKINS_URL: ((jenkins.url))
    JENKINS_JOB: ((jenkins.job.name))
    JENKINS_JOB_TOKEN: ((jenkins.job.token))
    JENKINS_USERNAME: ((jenkins.username))
    JENKINS_API_TOKEN: ((jenkins.api_token))



groups:
  - name: ci
    jobs: [update-pipeline, build-jenkins-job-resource-image-alpine, build-jenkins-job-resource-image-ubuntu]

  - name: test
    jobs: [trigger-build, get-build]



jobs:
  - name: update-pipeline
    <<: *default_job_config
    plan:
      - in_parallel:
        - get: jenkins-job-resource
          trigger: true

        - get: vars
          trigger: true

      - set_pipeline: self
        file: jenkins-job-resource/cicd/pipelines/jenkins-job-resource.yml
        var_files: ((var_files))


  - name: build-jenkins-job-resource-image-alpine
    <<: *default_job_config
    plan:
      - in_parallel:
        - get: jenkins-job-resource
          passed: [update-pipeline]
          trigger: true

        - get: version

      - put: jenkins-job-resource-image-alpine
        params:
          build: jenkins-job-resource/
          tag_as_latest: false
          cache: true
          dockerfile: jenkins-job-resource/dockerfiles/alpine/Dockerfile
          additional_tags: jenkins-job-resource/dockerfiles/alpine/tags
          build_args:
            <<: *build_args
        get_params:
          skip_download: true


  - name: build-jenkins-job-resource-image-ubuntu
    <<: *default_job_config
    on_success:
      in_parallel:
        - put: version
          params:
            bump: patch
        
        - put: notify
          params:
            channel: ((discord.channel))
            title: jenkins-job-resource
            message: new version successful
    plan:
      - in_parallel:
        - get: jenkins-job-resource
          passed: [update-pipeline]
          trigger: true

        - get: version

      - put: jenkins-job-resource-image-ubuntu
        params:
          build: jenkins-job-resource/
          tag_as_latest: true
          cache: true
          dockerfile: jenkins-job-resource/dockerfiles/ubuntu/Dockerfile
          additional_tags: jenkins-job-resource/dockerfiles/ubuntu/tags
          build_args:
            <<: *build_args
        get_params:
          skip_download: true


  - name: trigger-build
    <<: *default_job_config
    plan:
      - put: jenkins-job-resource-test
        params:
          cause: Concourse trigger


  - name: get-build
    <<: *default_job_config
    plan:
      - get: jenkins-job-resource-test
        passed: [trigger-build]
        trigger: true

      - task: check-input
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: alpine
          inputs:
            - name: jenkins-job-resource-test
          run:
            path: sh
            args:
              - -exc
              - ls; ls jenkins-job-resource-test
