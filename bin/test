#!/bin/sh

JENKINS_JOB_RESOURCE=$(cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && cd .. && pwd)
DEPENDENCIES="curl docker uuidgen"

echo "checking for dependencies..."
which -a $DEPENDENCIES
if [ $? -ne 0 ]; then
    echo "one of dependencies not found: $DEPENDENCIES"
    exit 1;
fi

JENKINS_HOME=/var/jenkins_home
TEST_CONTAINER=$(uuidgen | tr A-Z a-z)

echo "running jenkins/jenkins..."
docker run -d --rm \
    -v $JENKINS_JOB_RESOURCE/testdata/jobs:$JENKINS_HOME/jobs \
    -p 8080:8080 \
    -e JAVA_OPTS='-Djenkins.install.runSetupWizard=false -Djenkins.install.SetupWizard.adminInitialApiToken=api_token -Dhudson.security.csrf.DefaultCrumbIssuer.EXCLUDE_SESSION_ID=true' \
    -e JENKINS_HOME=$JENKINS_HOME \
    --name $TEST_CONTAINER \
    jenkins/jenkins
if [ $? -ne 0 ]; then
    exit $?;
fi

JENKINS_URL=http://localhost:8080

echo "waiting for jenkins to come up..."
until curl -s "$JENKINS_URL" -o /dev/null; do
    echo "..."
    sleep 15
done

echo "building jenkins-job-resource..."
docker build \
    --target test \
    --network host \
    --build-arg JENKINS_URL=$JENKINS_URL \
    --build-arg JENKINS_JOB=jenkins-job-resource-test \
    --build-arg JENKINS_JOB_TOKEN=job_token \
    --build-arg JENKINS_USERNAME=admin \
    --build-arg JENKINS_API_TOKEN=api_token \
    --build-arg JENKINS_JOB_ARTIFACT=output.txt \
    --build-arg JENKINS_JOB_RESULT=SUCCESS \
    $JENKINS_JOB_RESOURCE
if [ $? -ne 0 ]; then
    echo "stopping jenkins/jenkins..."
    docker stop $TEST_CONTAINER
    exit $?;
fi

echo "stopping jenkins/jenkins..."
docker stop $TEST_CONTAINER

exit $?
